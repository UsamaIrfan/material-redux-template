{"version":3,"sources":["config/Firebase.js","store/actionTypes.js","store/actions/Auth.js","comps/Navbar/index.jsx","pages/index.jsx","pages/signup.jsx","App.jsx","store/reducers/Auth.js","store/reducers/index.js","store/index.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","storage","firestore","SET_USER","googleprovider","GoogleAuthProvider","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","list","width","fullList","paper","position","backgroundColor","palette","background","boxShadow","shadows","padding","top","left","transform","modalTitle","color","primary","textAlign","modalButton","marginTop","textTransform","fontSize","googleButton","userName","ButtonAppBar","props","classes","dispatch","useDispatch","useState","Email","setEmail","Password","setPassword","useEffect","unsubsribe","onAuthStateChanged","authUser","type","user","userLoggedIn","useSelector","state","Auth","React","setState","open","setOpen","disable","setDisable","anchorEl","setAnchorEl","toggleDrawer","event","key","googleLoginHandler","signInWithPopup","then","result","catch","error","errorMessage","message","console","log","loginHandler","password","signInWithEmailAndPassword","err","logoutHandler","handleMenuClose","getState","signOut","renderMenu","id","anchorOrigin","vertical","horizontal","keepMounted","variant","transformOrigin","onClose","MenuItem","onClick","body","className","Typography","gutterBottom","onSubmit","e","preventDefault","autoComplete","TextField","value","onChange","target","label","fullWidth","helperText","Button","AppBar","Toolbar","IconButton","edge","aria-label","signupScreen","style","display","height","alignItems","displayName","aria-controls","aria-haspopup","Avatar","alt","src","photoURL","large","disabled","textDecoration","to","SwipeableDrawer","anchor","onOpen","role","onKeyDown","List","map","text","index","ListItem","button","ListItemIcon","ListItemText","Divider","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Home","justifyContent","mainContainer","flexDirection","boxSizing","borderRadius","borderColor","main","borderWidth","maxWidth","marginLeft","modalInput","history","useHistory","FName","setFName","LName","setLName","seterror","userEmail","userPassword","userFirstName","userLastName","createUserWithEmailAndPassword","currentUser","updateProfile","goBack","userSignUp","App","path","INITIAL_STATE","combineReducers","action","store","createStore","rootReducer","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac6dd41e.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyASg4nATdV-vU27siQFg8ygSj7IK9bejSk\",\r\n    authDomain: \"databasepractise-f6f20.firebaseapp.com\",\r\n    databaseURL: \"https://databasepractise-f6f20.firebaseio.com\",\r\n    projectId: \"databasepractise-f6f20\",\r\n    storageBucket: \"databasepractise-f6f20.appspot.com\",\r\n    messagingSenderId: \"224795211416\",\r\n    appId: \"1:224795211416:web:e4f7fdb174e331da85c2ed\",\r\n    measurementId: \"G-VC95YXWSHL\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore()\r\n    // const timeStamp = projectFirestore.FieldValue.serverTimestamp;\r\n\r\nexport { firebase, auth, projectStorage, projectFirestore }","export const SET_USER = \"SET_USER\"","import { SET_USER } from \"../actionTypes\"\r\n\r\nimport { firebase, auth } from '../../config/Firebase';\r\nvar googleprovider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const googleLogin = (setOpen, setDisable) => {\r\n\r\n    return (dispatch) => {\r\n        setOpen(false)\r\n        setDisable(true)\r\n        firebase.auth().signInWithPopup(googleprovider).then(function (result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            // var token = result.credential.accessToken;\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n            // console.log(user)\r\n            dispatch({\r\n                type: SET_USER,\r\n                user: user,\r\n            })\r\n            setDisable(false)\r\n            // ...\r\n        }).catch(function (error) {\r\n            // Handle Errors here.\r\n            // var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            // var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            // var credential = error.credential;\r\n            console.log(errorMessage)\r\n            setDisable(false)\r\n            // ...\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState) => {\r\n        const user = getState().Auth.user\r\n        console.log(\"Sign out\", user)\r\n        if (user) {\r\n            firebase.auth().signOut();\r\n            dispatch({\r\n                type: SET_USER,\r\n                user: null,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const userSignUp = (userEmail, userPassword, userFirstName, userLastName, history, seterror) => {\r\n    return (dispatch) => {\r\n        // Register Logic\r\n        auth.createUserWithEmailAndPassword(userEmail, userPassword)\r\n            .then((auth) => {\r\n                // created new user and logged in\r\n                console.log(auth)\r\n                var user = firebase.auth().currentUser;\r\n\r\n                user.updateProfile({\r\n                    displayName: `${userFirstName} ${userLastName}`,\r\n                    photoURL: 'https://statics.olx.com.pk/external/base/img/avatar_1.png',\r\n                }).then(function () {\r\n                    // Update successful.\r\n                    dispatch({ type: SET_USER, user: user })\r\n                    history.goBack()\r\n                }).catch(function (error) {\r\n                    // An error happened.\r\n                    console.log(error)\r\n                    seterror(error)\r\n                });\r\n                console.log(user)\r\n            })\r\n            .catch((err) => seterror(err.message))\r\n    }\r\n}\r\n\r\nexport const login = (Email, password, setOpen, setDisable) => {\r\n    // login Logic\r\n    setOpen(false)\r\n    setDisable(true)\r\n    return (dispatch) => {\r\n        auth.signInWithEmailAndPassword(Email, password)\r\n            .then((auth) => {\r\n                // Logged in set forms display to none.\r\n                console.log(auth)\r\n                dispatch({\r\n                    type: \"SET_USER\",\r\n                    user: auth\r\n                })\r\n                setDisable(false)\r\n            })\r\n            .catch((err) => {\r\n                setDisable(false)\r\n                console.log(err.message)\r\n            })\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { firebase } from \"../../config/Firebase\";\r\n\r\n// React router Import\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// Material UI Imports\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Person from '@material-ui/icons/Person';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\n// Sign in Actions\r\nimport * as Auth from \"../../store/actions/Auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    top: `50%`,\r\n    left: `50%`,\r\n    transform: `translate(-50%, -50%)`,\r\n  },\r\n  modalTitle: {\r\n    color: theme.palette.primary,\r\n    textAlign: \"center\"\r\n  },\r\n  modalButton: {\r\n    marginTop: 10,\r\n    textTransform: 'none',\r\n    fontSize: 16,\r\n  },\r\n  googleButton: {\r\n    marginTop: 10,\r\n    backgroundColor: \"#EA4335\",\r\n    fontSize: 16,\r\n    color: \"#fff\",\r\n    textTransform: 'none',\r\n    '&:hover': {\r\n      backgroundColor: '#ee6a5d',\r\n      boxShadow: 'none',\r\n    },\r\n    '&:active': {\r\n      boxShadow: 'none',\r\n      backgroundColor: '#ee6a5d',\r\n    },\r\n  },\r\n  userName: {\r\n    marginRight: 10,\r\n  },\r\n}));\r\n\r\n\r\nexport default function ButtonAppBar(props) {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch()\r\n  const [Email, setEmail] = useState()\r\n  const [Password, setPassword] = useState()\r\n\r\n  useEffect(() => {\r\n\r\n    const unsubsribe = firebase.auth().onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        // The user is Logged in\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: authUser\r\n        });\r\n      } else {\r\n        // The user is logged out\r\n        dispatch({\r\n          type: \"SET_USER\",\r\n          user: null\r\n        });\r\n      }\r\n    })\r\n    return () => {\r\n      // any clean up ligc goes in here\r\n      unsubsribe();\r\n    }\r\n  }, [])\r\n\r\n  // User Data\r\n  const userLoggedIn = useSelector(state => state.Auth.user)\r\n\r\n  const [state, setState] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [disable, setDisable] = React.useState(false);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(false);\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setState(open);\r\n  };\r\n\r\n  // Form FUnctions\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  // Login FUnctions\r\n  const googleLoginHandler = () => {\r\n    dispatch(Auth.googleLogin(setOpen, setDisable));\r\n  }\r\n\r\n  const loginHandler = () => {\r\n    dispatch(Auth.login(Email, Password, setOpen, setDisable))\r\n  }\r\n\r\n  // Logout FUnctions\r\n  const logoutHandler = () => {\r\n    handleMenuClose()\r\n    dispatch(Auth.signOut());\r\n  }\r\n\r\n  // Menu Functions\r\n  const handleProfileMenuOpen = () => {\r\n    setAnchorEl(true);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(false);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      id=\"menu-appbar\"\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      keepMounted\r\n      variant=\"menu\"\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      open={anchorEl}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={logoutHandler}>Sign Out</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const list = () => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(false)}\r\n      onKeyDown={toggleDrawer(false)}\r\n    >\r\n      <List>\r\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n        <ListItem button onClick={() => logoutHandler()}>\r\n          <ListItemIcon ><Person /></ListItemIcon>\r\n          <ListItemText primary=\"Sign Out\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const body = (\r\n    <div className={classes.paper}>\r\n      <Typography color=\"primary\" className={classes.modalTitle} variant=\"h4\" gutterBottom id=\"transition-modal-title\">\r\n        Login\r\n      </Typography>\r\n      <form className={classes.root} onSubmit={submitHandler} autoComplete=\"off\">\r\n        <TextField value={Email} onChange={(e) => setEmail(e.target.value)} label=\"Email\" fullWidth type=\"email\" helperText=\"example@site.com\" />\r\n        <TextField value={Password} onChange={(e) => setPassword(e.target.value)} label=\"Password\" fullWidth type=\"password\" />\r\n        <Button onClick={() => loginHandler()} className={classes.modalButton} variant=\"contained\" fullWidth color=\"primary\">Login</Button>\r\n        <Button onClick={() => googleLoginHandler()} className={classes.modalButton, classes.googleButton} variant=\"contained\" fullWidth>Login With Google</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton onClick={toggleDrawer(true)} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Computerize\r\n          </Typography>\r\n          {!props.signupScreen && <div>\r\n            {!userLoggedIn\r\n              ?\r\n              <>\r\n                <Button disabled={disable} onClick={() => setOpen(true)} color=\"inherit\">Login</Button>\r\n                <Button disabled={disable} color=\"inherit\"><Link style={{ color: \"#fff\", textDecoration: \"none\" }} to=\"/signup\">Sign Up</Link></Button>\r\n              </>\r\n              :\r\n              <div style={{ display: \"flex\", height: \"100%\", alignItems: \"center\" }}>\r\n                <Typography variant=\"body1\" className={classes.userName}>\r\n                  {userLoggedIn.displayName}\r\n                </Typography>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleProfileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <Avatar alt=\"Remy Sharp\" src={userLoggedIn?.photoURL} className={classes.large} />\r\n                </IconButton>\r\n                <div>\r\n                  {renderMenu}\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <SwipeableDrawer\r\n        anchor=\"left\"\r\n        open={state}\r\n        onClose={toggleDrawer(false)}\r\n        onOpen={toggleDrawer(true)}\r\n      >\r\n        {list()}\r\n      </SwipeableDrawer>\r\n      <Modal\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          {body}\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport AppBar from \"../comps/Navbar\";\r\nimport { Typography } from \"@material-ui/core\"\r\n\r\nfunction Home() {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <AppBar />\r\n      </div>\r\n      <div style={{ display: \"flex\", height: \"500px\", alignItems: \"center\", justifyContent: \"center\", width: \"100%\", }}>\r\n        <Typography variant=\"h4\" color=\"primary\">Computerize</Typography>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from \"react-redux\"\r\n\r\n// Custom Comps\r\nimport Navbar from \"../comps/Navbar\";\r\n\r\n// Material UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// REact-router\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\n// Auth Actions \r\nimport { userSignUp } from \"../store/actions/Auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modalButton: {\r\n        marginTop: 10,\r\n        textTransform: 'none',\r\n        fontSize: 16,\r\n    },\r\n    mainContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        boxSizing: \"border-box\",\r\n        height: \"70vh\",\r\n        padding: theme.spacing(2, 4, 3),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: 5,\r\n        borderColor: theme.palette.primary.main,\r\n        borderWidth: 3,\r\n        maxWidth: \"750px\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n    },\r\n    modalInput: {\r\n        marginTop: 10,\r\n    }\r\n}));\r\n\r\nexport default function () {\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const [FName, setFName] = useState(\"\")\r\n    const [LName, setLName] = useState(\"\")\r\n    const [Password, setPassword] = useState(\"\")\r\n    const [Email, setEmail] = useState(\"\")\r\n    const [error, seterror] = useState(null)\r\n\r\n    const signUpHandler = () => {\r\n        dispatch(userSignUp(Email, Password, FName, LName, history, seterror))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar signupScreen={true} />\r\n            <div className={classes.mainContainer}>\r\n                <Typography variant=\"h4\" color=\"primary\" gutterBottom>Sign Up</Typography>\r\n                <form className={classes.root} onSubmit={() => { }} autoComplete=\"off\">\r\n                    <TextField onChange={(e) => setFName(e.target.value)} value={FName} className={classes.modalInput} label=\"First Name\" fullWidth type=\"text\" />\r\n                    <TextField onChange={(e) => setLName(e.target.value)} value={LName} className={classes.modalInput} label=\"Last Name\" fullWidth type=\"text\" />\r\n                    <TextField onChange={(e) => setEmail(e.target.value)} value={Email} className={classes.modalInput} label=\"Email\" fullWidth type=\"email\" helperText=\"example@site.com\" />\r\n                    <TextField onChange={(e) => setPassword(e.target.value)} value={Password} className={classes.modalInput} label=\"Password\" fullWidth type=\"password\" />\r\n                    <Button onClick={signUpHandler} disabled={FName === \"\" || LName === \"\" || Email === \"\" || Password === \"\"} className={classes.modalButton} variant=\"contained\" fullWidth color=\"primary\">Sign Up</Button>\r\n                    {error && <Typography variant=\"body2\" color=\"error\" gutterBottom>{error}</Typography>}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n// Screens\nimport Home from \"./pages/index\"\nimport SignUp from \"./pages/signup\";\n\nfunction App() {\n  return (\n<Router>\n      <Switch>\n        <Route path=\"/signup\">\n          <SignUp />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE = {\r\n    user: null\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"SET_USER\":\r\n            console.log(action)\r\n            return ({\r\n                ...state,\r\n                user: action.user\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}","import Auth from './Auth';\r\nimport {combineReducers} from 'redux';\r\n\r\nexport default combineReducers({\r\n    Auth: Auth\r\n});","import rootReducer from './reducers';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport store from \"./store\";\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\"\n\nReactDOM.render(\n    // <React.StrictMode>\n    <Provider store={store} >\n        <App />\n    </Provider>\n    // </React.StrictMode>\n    , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}